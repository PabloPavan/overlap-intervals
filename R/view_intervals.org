#+TITLE: Overlap Analysis
#+AUTHOR: Pablo Pavan
#+LATEX_HEADER: \usepackage[margin=2cm,a4paper]{geometry}
#+TAGS: Pablo(P) noexport(n) deprecated(d) success(s) failed(f) pending(p)
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+SEQ_TODO: TODO(t!) STARTED(s!) WAITING(w!) REVIEW(r!) PENDING(p!) ON-HOLD(o!) | DONE(d!) CANCELLED(c!) DEFERRED(f!) DEPRECATED(x!)
#+STARTUP: overview indent
#+OPTIONS: ^:nil
#+OPTIONS: _:nil
#+PROPERTY: header-args :eval never-export 

* Load R librarys

#+begin_src R :results output :session *R* :exports both
library(ggplot2)
library(cowplot)
#+end_src

#+RESULTS:
: 
: Attaching package: ‘cowplot’
: 
: The following object is masked from ‘package:ggplot2’:
: 
:     ggsave

* Analysis of raw data

** Read CSV

#+begin_src R :results output :session *R* :exports both
df <- as.data.frame(read.csv('../data/intervals.small.csv', dec = '.', sep = ';'))

str(df)
#+end_src

#+RESULTS:
: 'data.frame':	7 obs. of  6 variables:
:  $ filename  : Factor w/ 4 levels "11.parsed.json",..: 1 1 1 2 2 3 4
:  $ start_time: int  3761 3761 3761 3777 3777 4470 4508
:  $ end_time  : int  4508 4508 4508 8354 8354 4508 4508
:  $ start     : num  2.3 696.5 696.5 2.7 120 ...
:  $ end       : num  49.8 747.4 747.4 37.2 747.4 ...
:  $ info      : Factor w/ 5 levels "posix read consecutive sequential unique file",..: 2 3 1 5 4 5 1
:  $ end       : num  49.8 747.4 747.4 37.2 747.4 ...
:  $ info      : Factor w/ 6 levels "posix read consecutive sequential unique file",..: 2 4 1 6 5 3 1

** Pre-processig

#+begin_src R :results output :session *R* :exports both
epoch_time <- 0
df$start  = df$start * 1
df$start_time = df$start_time - epoch_time
df$start_time = df$start_time * 1
# df$final_start_time = df$start_time + df$start

df$end  = df$end * 1
df$end_time = df$end_time - epoch_time
df$end_time = df$end_time * 1
# df$final_end_time = df$end_time + df$end



df$start_ = (df$start_time + df$start)# -epoch_time


df$duration <- df$end - df$start


df$end_ = df$start_ + df$duration #- epoch_time




str(df)
#+end_src

#+RESULTS:
#+begin_example
'data.frame':	7 obs. of  9 variables:
 $ filename  : Factor w/ 4 levels "11.parsed.json",..: 1 1 1 2 2 3 4
 $ start_time: num  3761 3761 3761 3777 3777 ...
 $ end_time  : num  4508 4508 4508 8354 8354 ...
 $ start     : num  2.3 696.5 696.5 2.7 120 ...
 $ end       : num  49.8 747.4 747.4 37.2 747.4 ...
 $ info      : Factor w/ 5 levels "posix read consecutive sequential unique file",..: 2 3 1 5 4 5 1
 $ start_    : num  3763 4458 4458 3780 3897 ...
 $ duration  : num  47.5 50.9 50.9 34.5 627.4 ...
 $ end_      : num  3811 4508 4508 3814 4524 ...
#+end_example


** Plot raw 

#+begin_src R :results output graphics :file interval_small.png :exports both :width 1000 :height 250 :session *R* 

df$id <- seq.int(nrow(df))

ggplot(df, aes(x = start_, y = start_+duration, fill=info)) + 
     geom_rect(aes(xmin = start_, xmax = start_+duration, ymin = id, ymax = id + 1)) +
     #geom_vline(xintercept = 0, color = "red") +
     #geom_vline(xintercept = 4*1000000000, color = "red") +
     ylim(0, max(df$id+1)) +
     
     xlab("Time (milliseconds)") +
     ylab("Interval ID") + 
     theme_bw() +
     theme(
           legend.position = "none",
           text = element_text(size = 14),
           axis.title.y = element_text(vjust = 0.4), 
           strip.background = element_rect(colour = NA, fill = NA)
     )
#+end_src

#+RESULTS:
[[file:interval_small.png]]

* Analysis of C++ results
** Read CSV

 #+begin_src R :results output :session *R* :exports both
df <- as.data.frame(read.csv('../data/final.csv', dec = '.', sep = ';'))

str(df)
 #+end_src

 #+RESULTS:
 : 'data.frame':	10 obs. of  7 variables:
 :  $ start   : int  3763 3779 3810 3814 3897 4457 4471 4508 4514 4517
 :  $ end     : int  3779 3810 3814 3897 4457 4471 4508 4514 4517 4555
 :  $ duration: int  16 31 4 83 560 14 37 6 3 38
 :  $ phases  : Factor w/ 10 levels "-1","0","0,3",..: 2 3 6 1 9 5 4 7 8 10
 :  $ nphases : int  1 2 1 0 1 3 4 2 3 1
 :  $ jobs    : Factor w/ 8 levels "-1","0","0,1",..: 2 3 5 1 5 3 4 6 7 8
 :  $ njobs   : int  1 2 1 0 1 2 3 2 3 1

** Plot intevals

 #+begin_src R :results output graphics :file saida_final.png :exports both :width 1000 :height 250 :session *R* 
pal <- c(   "gray",
            "#d5c76d",
            "#d5936d",
            "#6dafd5",
            "#d56d7b",
            "#6dd5c7",
            "#936dd5",
            "#d56daf",
            "#db818d",
            "#959fe0")

ggplot(df, aes(x = start, y = start+duration, fill = phases)) + 
    geom_rect(aes(xmin = start, xmax = start + duration, ymin = 0, ymax = 1)) +
    geom_vline(xintercept = min(df$start), linetype = 'dashed', size = 0.5) +
    geom_vline(xintercept = max(df$end), linetype = 'dashed') +
    scale_fill_manual(
       "I/O phases",
        values = pal
    ) +
    xlab("Tempo de execução (ms)") +
    ylim(0, 1) +
    guides(fill = guide_legend(ncol = 3)) +
    theme_bw() +
    theme(
        legend.position = "top",
        text = element_text(size = 14),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank()
    )
 #+end_src

 #+RESULTS:
 [[file:saida_final.png]]
